.flex-nowrap {
    -webkit-flex-wrap: nowrap !important;
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
}

.flex-wrap {
    -webkit-flex-wrap: wrap !important;
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
}

.flex {
    box-sizing: border-box;
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    // -webkit-flex: 0 1 auto;
    // -ms-flex: 0 1 auto;
    // // flex: 0 1 auto;
    // -webkit-box-flex: 0;
}

.flex-row {
    .flex();
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-lines: single;
}

.flex-column {
    .flex();
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-flex-wrap: nowrap;
    -webkit-box-orient: vertical;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    -webkit-box-lines: single;
}

.flex-row-reverse {
    .flex-row();
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
    -webkit-box-direction: reverse;
}

.flex-column-reverse {
    .flex-column();
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
    -webkit-box-direction: reverse;
}

.flex-auto {
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    -webkit-box-flex: 1;
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
}

.flex-basis-loop(@n, @i:1) when (@i <= @n) {
    .flex-basis-@{i} {
        -webkit-flex-basis: percentage(@i / @n);
        -ms-flex-preferred-size: percentage(@i / @n);
        flex-basis: percentage(@i / @n);
    }
    .flex-basis-loop(@n, (@i + 1));
}

.flex-span-loop(@n, @i:1) when (@i <= @n) {
    .flex-span-@{i} {
        -webkit-flex: @i @i auto;
        -ms-flex: @i @i auto;
        flex: @i @i auto;
        -webkit-box-flex: @i;
    }
    .flex-span-loop(@n, (@i + 1));
}

@align-items-keys: start, center, end, stretch;
@align-items-values: flex-start, center, flex-end, between, around;

.flex-align-items(@data, @i: 1) when(@i =< length(@data)) {
    @align: extract(@align-items-keys, @i);
    @value: extract(@align-items-values, @i);

    .align-items-@{align} {
        -webkit-align-items: @value;
        align-items: @value;
        -webkit-box-align: @align;
    }

    .flex-align-items(@data, (@i + 1));
}

@justify-content-keys: start, center, end, between, around;
@justify-content-values: flex-start, center, flex-end, space-between,
    space-around;

.flex-justify-content(@data, @i: 1) when(@i =< length(@data)) {
    @key: extract(@justify-content-keys, @i);
    @value: extract(@justify-content-values, @i);

    .justify-content-@{key} {
        -webkit-justify-content: @value;
        justify-content: @value;
    }

    .flex-justify-content(@data, (@i + 1));
}

.flex,
.flex-row,
.flex-column,
.flex-row-reverse,
.flex-column-reverse {
    .flex-basis-loop(12);
    .flex-span-loop(12);
}

.flex-justify-content(@justify-content-keys);
.flex-align-items(@align-items-keys);
